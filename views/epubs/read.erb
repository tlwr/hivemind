<div>
  <header class="flex mb-8 items-end">
    <h1 class="text-4xl mr-8"><%= @epub.title %></h1>
  </header>

  <p class="text-gray-500 mr-8">
    <a class="underline hover:text-indigo-500" href="/epubs/<%= @epub.id %>">view epub</a>
  </p>

  <% if @epub.table_of_contents? %>
    <p class="text-gray-500">
      <a class="underline hover:text-indigo-500"
         href="<%= @epub.href_path(@epub.table_of_contents.href)%>?read#read-start">
        table of contents
      </a>
    </p>
  <% end %>
</div>

<div id="read-start"></div>

<%= erb :"epubs/_nav" %>

<section style="max-width: 32em" class="mt-4 mb-4 ml-auto mr-auto">
  <iframe src="<%= @epub.href_path(@item.href) %>"
          type="<%= @item.media_type %>"
          style="width: 100%;"
          scrolling="no"
          onload="let b = this.contentWindow.document.body; this.height = Math.abs(b.getBoundingClientRect().top) + b.scrollHeight"
          id="embedded-content">
  </iframe>
</section>

<%= erb :"epubs/_nav" %>

<script>
// TODO - inline script is bad  
(function(){
  'use strict'
  const links = document.querySelectorAll('td a') // TODO - make this selector more specific
  const prevLink = links[0] // TODO - what if this is undefined?
  const nextLink = links[1] // TODO - what if this is undefined?
  const prev = () => prevLink.click()
  const next = () => nextLink.click()
  document.addEventListener('keydown', (e) => {
    switch(e.key) {
    // TODO - could be bad for accessibility - do users actually expect the arrow keys to change page, rather than their default actions?
    case 'ArrowRight':
        next()
        break
    case 'ArrowLeft':
        prev()
        break
    }
  })
})()
</script>
